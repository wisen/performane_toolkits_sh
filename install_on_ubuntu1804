#!/bin/bash

. ./util/color.u
. ./util/process.u
. ./util/os.u

if [ ! -n "$1" ];then
	echo -e "\033[41;37m" Please Run this script with your sudo passwd "\033[0m"
	echo
	echo -e "\033[32m" $0 sudopasswd "\033[0m"
	echo
	exit
fi

user=`whoami`
passwd=$1

############
coredumpfolder=~/coredump
sdbmountpoint=~/data

if [ ! -d $coredumpfolder ];then
mkdir $coredumpfolder
fi

if [ ! -d $sdbmountpoint ];then
mkdir $sdbmountpoint
fi
############

if true;then
echo $passwd |sudo -S sed -i '/Custom Configuration Start/,$d' /etc/sysctl.conf 
echo $passwd |sudo -S sh -c "cat envconf/sysctl.conf >> /etc/sysctl.conf"
echo $passwd |sudo -S sysctl -p > /dev/null
# user should run `ulimit -c unlimited` to ulimit the coredump 

echo $passwd |sudo -S sed -i '/Custom Configuration Start/,$d' /etc/apt/sources.list
echo $passwd |sudo -S sh -c "cat envconf/sources.list >> /etc/apt/sources.list"

echo $passwd |sudo -S sed -i '/Custom Configuration Start/,$d' /etc/fstab
echo $passwd |sudo -S sh -c 'echo "#Custom Configuration Start" >> /etc/fstab'
echo $passwd |sudo -S sh -c 'echo "#/DATA was on /dev/sdb2 mount to /home/wisen/data" >> /etc/fstab'
echo $passwd |sudo -S sh -c 'echo "UUID=52640F35640F1B7D /home/wisen/data ntfs defaults 0 0" >> /etc/fstab'
echo $passwd |sudo -S mount -a
if [ $? -ne 0 ];then 
echo $passwd |sudo -S sed -i '/Custom Configuration Start/,$d' /etc/fstab
#echo
#red "Confirm your modify in fstab"
#red "Use 'sudo mount -a' to confirm it"
fi

echo $passwd |sudo -S cp envconf/80-android.rules /etc/udev/rules.d/
echo $passwd |sudo -S chmod a+x /etc/udev/rules.d/80-android.rules
echo $passwd |sudo -S service udev restart
fi

sed -i '/Custom Configuration Start/,$d' ~/.gdbinit
cat envconf/gdbinit >> ~/.gdbinit

basepath=$(cd `dirname .`; pwd)
#echo $basepath

sed -i '/Custom Configuration Start/,$d' ~/.bashrc

(cat <<EOF

## Custom Configuration Start ##
###Mount sdb2 start###
cat /proc/mounts | grep "\/dev\/sdb2" > /dev/null
if [ \$? -ne 0 ];then
sudo -S mount -t ntfs /dev/sdb2 /home/$user/data <<MMM
$passwd
MMM
fi

if [ \$? -eq 0 ] 
then
    echo "Mount \/dev\/sdb2 sucess" > /dev/null
else
    echo -e "\033[31m Mount \/dev\/sdb2 fail..  \033[0m"
fi
###Mount sdb2 end###

scriptpath="$basepath:$basepath/applist/:$basepath/bin/:$basepath/case/:$basepath/config/:$basepath/logutil/:$basepath/mon/:$basepath/parser/:$basepath/prebuilt_tools/:$basepath/tools/:$basepath/test/:$basepath/util/:$basepath/eMMC_Test/bin/"
PATH=\${scriptpath}:\${PATH}
export SCRIPT_ROOT=${basepath}

ASHELL_ROOT=\$SCRIPT_ROOT/tbox/
ASHELL_VERSION=1.0.1
export ASHELL_ROOT
export ASHELL_VERSION

#eval "dircolors -b \$SCRIPT_ROOT/tbox/.DIR_COLORS"
LS_COLORS=\$(dircolors -b \$ASHELL_ROOT/.DIR_COLORS|awk -F "'" 'NR==1{print \$2}')
export LS_COLORS

alias ls='ls -F --color=auto --show-control-chars'
alias evelog='adb logcat -b events'
alias logcat='adb logcat'
alias getprop='adb shell getprop'
alias setprop='adb shell setprop'
alias dropcache='adb shell echo 3 > //proc/sys/vm/drop_caches'
alias la='ls -la'
alias ll='ls -l'
alias lla='ls -la'
alias lh='ls -lh'
alias l='lla'
alias lls='l'
alias grep='grep --color'
alias exit="date > \$ASHELL_ROOT/.last_logout_time;reset;exit"
#alias vim='vim -u \$ASHELL_ROOT/conf/.viminfo'
alias vi='vim -u \$SCRIPT_ROOT/tbox/conf/_vimrc'
alias activate='source activate'
alias rm='rm -rf'
alias aShell='bash --rcfile \${SCRIPT_ROOT}/tbox/.myAndDevice.rc'
alias as='aShell'
alias cdroot='cd \${SCRIPT_ROOT}'
alias cls='printf "\033c"'
alias pelf='python \${SCRIPT_ROOT}/py/parser/elf.parser'

alias lx="ls -l|awk '{if(NR>1) printf(\"%s\t0x%x\n\", \$0,\$5)}'"
alias ccc="ctags -R;cscope -Rbq"

git config --global core.editor vi
git config --global core.quotepath false
git config --global user.email "wisen.wang.ah@gmail.com"
git config --global user.name "Wisen Wang"

ulimit -c unlimited

stty echo
#PYTHON2_PATH="/$(echo $PYTHON2|sed 's/\\/\//g'|sed 's/://g')"
#PYTHON3_PATH="/$(echo $PYTHON3|sed 's/\\/\//g'|sed 's/://g')"
#export PATH=\${PYTHON3_PATH}:\${PYTHON3_PATH}/Scripts/:"\${PATH}":"\$ASHELL_ROOT/tools/"
export PATH="\${PATH}":"\$ASHELL_ROOT/tools/"

#####start define complete#########
for tabfile in \$(find -L \$ASHELL_ROOT/conf/ -name *tab*)
do
	. \$tabfile
done
#####end complete#########

###set java env start###                                                                                                                          
##java 10.0.1
#export JAVA_HOME=/home/$user/data/java/jdk-10.0.1
#export JRE_HOME=/home/$user/data/java/jre-10.0.1
##java 1.8.0_172
export JAVA_HOME=/home/$user/data/java/jdk1.8.0_172
export JRE_HOME=/home/$user/data/java/jre1.8.0_172

export CLASSPATH=.:\${JAVA_HOME}/lib:\${JRE_HOME}/lib  
export PATH=\${JAVA_HOME}/bin:\${PATH}
###set java env end###

wlan_dev="wlp7s0"
essidname="test-ppd"
is_internalnet=false
inter_user="wanbin.wang"
inter_passwd="Bb123456"
inter_domain="transsion"

iwconfig \$wlan_dev | grep \$essidname > /dev/null
if [ \$? -eq 0 ];then
is_internalnet=true
fi

if \$is_internalnet;then
###Mount reallytek start###
cat /proc/mounts | grep "//192.168.1.71/reallytek/" > /dev/null
if [ \$? -ne 0 ];then
if [ ! -f /home/$user/smb/71/reallytek ];then
mkdir -p /home/$user/smb/71/reallytek
fi
sudo -S mount -t cifs -o username=\$inter_user,pass=\$inter_passwd,domain=\$inter_domain //192.168.1.71/reallytek/ /home/$user/smb/71/reallytek/ <<AAA
$passwd
AAA
fi

if [ \$? -eq 0 ]
then
    echo "Mount reallytek sucess" > /dev/null
else
    echo -e "\033[31m Mount reallytek fail..  \033[0m"
fi
###Mount reallytek end###

###Mount Transsionsharing start###
cat /proc/mounts | grep ""//192.168.1.75/Transsionsharing/ > /dev/null
if [ \$? -ne 0 ];then
if [ ! -f /home/$user/smb/75/Transsionsharing ];then
mkdir -p /home/$user/smb/75/Transsionsharing
fi
sudo -S mount -t cifs -o username=\$inter_user,pass=\$inter_passwd,domain=\$inter_domain //192.168.1.75/Transsionsharing/ /home/$user/smb/75/Transsionsharing <<BBB
$passwd
BBB
fi

if [ \$? -eq 0 ]
then
    echo "Mount Transsionsharing sucess" > /dev/null
else
    echo -e "\033[31m Mount Transsionsharing fail..  \033[0m"
fi
###Mount Transsionsharing end###
fi

###set cuda path start###
export CUDA_HOME=/usr/local/cuda-9.2/bin
export PATH=\${PATH}:\${CUDA_HOME}/bin
export LD_LIBRARY_PATH=/usr/local/cuda-9.2/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
###set cuda path end###

PS1='\[\033[01;33m\]\u\[\033[00m\]\[\033[01;31m\][\[\033[00m\]\[\033[04;32m\]\t\[\033[00m\]\[\033[01;31m\]]\[\033[00m\]\[\033[35;40m\] aShell \[\033[00m\]\[\033[01;34m\]\w\[\033[00m\]\n\[\033[45;37m\]$\[\033[0m\]  '

#export HOME=\$ASHELL_ROOT/home/
#cd \$HOME

# added by Anaconda3 installer
export PATH="/home/$user/anaconda3/bin:$PATH"
## Custom END ##
EOF
) >> ~/.bashrc

############
if true;then
	terminatorfolder=~/.config/terminator
	terminatorfile=$terminatorfolder/config
	if [ ! -d $terminatorfolder ];then
		mkdir -p $terminatorfolder
	fi
	
	if [ ! -f $terminatorfile ];then
		touch $terminatorfile
	fi
	
(cat <<EOF
[global_config]
  geometry_hinting = False
  handle_size = 1
  inactive_color_offset = 1.0
  title_font = mry_KacstQurn Bold 11
  title_hide_sizetext = True
[keybindings]
[layouts]
  [[default]]
    [[[child1]]]
      parent = window0
      profile = default
      type = Terminal
    [[[window0]]]
      parent = ""
      type = Window
[plugins]
[profiles]
  [[default]]
    background_darkness = 0.76
    background_image = None
    background_type = transparent
    cursor_color = "#f1f1fa"
	cursor_shape = underline
    custom_command = tmux
    font = Ubuntu Mono 16
    foreground_color = "#ffffff"
    login_shell = True
    show_titlebar = False
    use_system_font = False
EOF
) > $terminatorfile
fi
############

echo
echo -e "\033[44;5m" Please restart your terminal and Work in your New environment "\033[0m"
echo
