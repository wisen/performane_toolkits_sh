#!/usr/bin/env python3

import os
import re
import subprocess
import sys


MANIFESTXML= '.repo/manifest.xml'


def git_pull(path,branch):

    cwd = os.getcwd()
    changeto = "%s/%s" % (cwd,path)
    
    try:
        os.chdir(changeto)
    except:
        os.chdir(cwd)

    cmd = ["git","reset","--hard","HEAD"]
    ret = subprocess.call(cmd)
    cmd = ["git","pull"]
    ret = subprocess.call(cmd)
    
    if ret != 0:
        cmd = ["git","checkout",branch]
        ret = subprocess.call(cmd)
        cmd = ["git","pull"]
        ret = subprocess.call(cmd)

    os.chdir(cwd)

def get_git_patch(line):
    
    r = re.compile(r'(project.*path=\")(\w+.*?)(" .*>)')
    ret  = r.search(line)
    if ret is not None:
        return ret.group(2)
    else:
        return None

def code_sync(branch):

    fp = open(MANIFESTXML)    
    
    for line in fp:
        path = get_git_patch(line)
        if path is not None:
            print(path)
            git_pull(path,branch)

    fp.close()

if __name__ == '__main__' :

    branch = sys.argv[1]
    code_sync(sys.argv[1])

